plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.0'
	id 'net.ltgt.apt' version '0.9'
}


bootJar{
	archiveBaseName = 'mail-api'
	group = 'mx.habil'
	archiveVersion = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'
}

sourceSets {
    test.java.srcDirs += "${buildDir}/generated/source/apt/main"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all*.exclude module : 'spring-boot-starter-logging'
}


repositories {
	maven {
	 	url 'https://nexus.habil.mx/repository/maven-public/'
	 	credentials {
			 username "$habil_nexus_username"
			 password "$habil_nexus_password"
	 	}
	 }
}

ext {
	mxHabil = '1.0.0.RELEASE'
    orgProjectlombokVersion = '1.18.12'
    orgSpringframeworkVersion = '5.2.6.RELEASE'
	javaxJsonVersion = '1.1.4'
	orgpAcheJohnzonVersion = '1.2.6'
	comFasterxmlJacksonDatatypeVersion = '2.11.0'
	orgMapstructVersion = '1.3.1.Final'
	orgApacheCommonsVersion = '3.10'
	commonsValidatorVersion = '1.6'
	springCloudVersion = 'Hoxton.SR5'
	springBootAdminVersion = '2.2.3'
}


dependencies {

	implementation "mx.habil:habil:${mxHabil}"
	implementation "org.apache.johnzon:johnzon-core:${orgpAcheJohnzonVersion}"
	implementation "javax.json:javax.json-api:${javaxJsonVersion}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr353:${comFasterxmlJacksonDatatypeVersion}"
	implementation "org.projectlombok:lombok:${orgProjectlombokVersion}"
	implementation "org.mapstruct:mapstruct:${orgMapstructVersion}"
	implementation "org.apache.commons:commons-lang3:${orgApacheCommonsVersion}"
	implementation "commons-validator:commons-validator:${commonsValidatorVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'javax.mail:mail:1.4'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.3.1.RELEASE'


	    
	annotationProcessor "org.projectlombok:lombok:${orgProjectlombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${orgMapstructVersion}"
	
	testAnnotationProcessor "org.projectlombok:lombok:${orgProjectlombokVersion}"

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	testImplementation "org.projectlombok:lombok:${orgProjectlombokVersion}"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	

}

test {
	useJUnitPlatform()
}


jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco/jacocoHtml")
    }
}

sonarqube {
    properties {
		property 'sonar.projectName', '2020-04-HB-DS-GEH-0016: Mail API'
		property 'sonar.projectDescription', 'Microservicio de envio de correo  con AWS y basado en Spring Boot.'
		property 'sonar.projectVersion', version
		property 'sonar.projectKey', 'temp-mailsender-qa-parent'
		property 'sonar.host.url', 'https://sonarqube-com.habil.mx'
		property 'sonar.login', 'fd9c9a02e122e3a828cb697e9a900535c96a681f'
		property 'sonar.scm.provider', 'git'
		property 'sonar.sourceEncoding', 'UTF-8'
		property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}
